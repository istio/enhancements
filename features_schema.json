{
    "$id": "istio.io/features",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "description": "Defines the maturity of features in Istio",
    "type": "object",
    "properties": {
        "features": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                       "type": "string",
                       "description":"A unique machine-readable identifier for the feature"
                     },
                    "name": {
                        "type": "string",
                        "description": "The name of the feature."
                    },
                    "link": {
                        "type": "string",
                        "description": "A primary link that users can navigate to in order to find out more about a feature. This link may be provided to users by tooling consuming features.yaml."
                    },
                    "area": {
                        "type": "string",
                        "description": "The area of the feature.",
                        "enum": [
                            "Traffic Management",
                            "Observability",
                            "Extensibility",
                            "Security and policy enforcement",
                            "Core",
                            "Ambient mode"
                        ]
                    },
                    "level": {
                        "type": "object",
                        "properties": {
                            "checklist": {
                                "type": "string",
                                "description": "The path to the checklist to track a feature's maturity."
                            },
                            "maturity": {
                                "type": "string",
                                "description": "The current maturity level of the feature. This can be experimental, alpha, beta, or stable. Experimental is an optional maturity level that can be skipped. For alpha, beta, and stable, all requirements for the previous levels must be met before a feature can meet the next level (i.e. a stable feature has met the requirements of both alpha and beta). There may be features for which a requirement is not applicable.",
                                "enum": [
                                    "Experimental",
                                    "Alpha",
                                    "Beta",
                                    "Stable"
                                ]
                            },
                            "maturityNotes": {
                                "type": "string",
                                "description": "Specific notes that may be needed alongside a maturity level."
                            },
                            "nextExpectedPromotion": {
                                "type": "string",
                                "description": "The Istio release by which the next promotion of a feature is expected. Up until a feature is stable, a feature is expected to continuously mature. If a feature doesn't get promoted, this should be extended or the feature should be deprecated. In some rare circumstances, features will be permanently in a state below stable and never expected to be promoted. For those circumstances, this field can be marked never."
                            }
                        },
                        "required": [
                            "checklist",
                            "maturity"
                        ]
                    },
                    "deprecation": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string",
                                "description": "This can be deprecated or retired. When a feature is deprecated, users should consider migrating to a replacement as retired features may be removed. Deprecation time varies depending on the current maturity level.",
                                "enum": [
                                    "deprecated",
                                    "retired"
                                ]
                            },
                            "details": {
                                "type": "object",
                                "description": "Should be set when a feature moves out of the active state.",
                                "properties": {
                                    "replacement": {
                                        "type": "string",
                                        "description": "Should specify the checklist(s) for any feature replacing this deprecated feature."
                                    },
                                    "next": {
                                        "type": "string",
                                        "description": "Indicates the release in which the feature will be retired."
                                    }
                                },
                                "required": [
                                    "next"
                                ]
                            }
                        },
                        "required": [
                            "state",
                            "details"
                        ]
                    },
                    "apis": {
                        "type": "array",
                        "description": "The contract between this feature and the user. These are the set of APIs that the feature exposes to the user. Note that these need not be Kubernetes resources; they can be a set of metric names, annotations, protocols, etc.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the API."
                                },
                                "link": {
                                    "type": "string",
                                    "description": "A primary link that users can navigate to in order to find out more about an API. This link may be provided to users by tooling consuming features.yaml."
                                },
                                "maturity": {
                                    "type": "string",
                                    "description": "The current maturity level of the API. This can be experimental, alpha, beta, or stable. Experimental is an optional maturity level that can be skipped. For alpha, beta, and stable, all requirements for the previous levels must be met before a feature can meet the next level (i.e. a stable feature has met the requirements of both alpha and beta). There may be features for which a requirement is not applicable.",
                                    "enum": [
                                        "Experimental",
                                        "Alpha",
                                        "Beta",
                                        "Stable"
                                    ]
                                }
                            },
                            "required": [
                                "name",
                                "link",
                                "maturity"
                            ]
                        }
                    }
                },
                "required": [
                    "name",
                    "level",
                    "area",
                    "id"
                ]
            }
        }
    },
    "required": [
        "features"
    ]
}
